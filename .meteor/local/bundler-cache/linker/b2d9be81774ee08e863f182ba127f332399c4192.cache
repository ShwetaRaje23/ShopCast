[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar OAuth = Package.oauth.OAuth;\nvar Oauth = Package.oauth.Oauth;\nvar HTTP = Package.http.HTTP;\nvar HTTPInternals = Package.http.HTTPInternals;\nvar _ = Package.underscore._;\nvar ServiceConfiguration = Package['service-configuration'].ServiceConfiguration;\n\n/* Package-scope variables */\nvar Facebook;\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                //\n// packages/facebook/facebook_server.js                                                           //\n//                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                  //\nFacebook = {};                                                                                    // 1\n                                                                                                  // 2\nvar querystring = Npm.require('querystring');                                                     // 3\n                                                                                                  // 4\n                                                                                                  // 5\nOAuth.registerService('facebook', 2, null, function(query) {                                      // 6\n                                                                                                  // 7\n  var response = getTokenResponse(query);                                                         // 8\n  var accessToken = response.accessToken;                                                         // 9\n                                                                                                  // 10\n  // include all fields from facebook                                                             // 11\n  // http://developers.facebook.com/docs/reference/login/public-profile-and-friend-list/          // 12\n  var whitelisted = ['id', 'email', 'name', 'first_name',                                         // 13\n      'last_name', 'link', 'gender', 'locale', 'age_range'];                                      // 14\n                                                                                                  // 15\n  var identity = getIdentity(accessToken, whitelisted);                                           // 16\n                                                                                                  // 17\n  var serviceData = {                                                                             // 18\n    accessToken: accessToken,                                                                     // 19\n    expiresAt: (+new Date) + (1000 * response.expiresIn)                                          // 20\n  };                                                                                              // 21\n                                                                                                  // 22\n                                                                                                  // 23\n  var fields = _.pick(identity, whitelisted);                                                     // 24\n  _.extend(serviceData, fields);                                                                  // 25\n                                                                                                  // 26\n  return {                                                                                        // 27\n    serviceData: serviceData,                                                                     // 28\n    options: {profile: {name: identity.name}}                                                     // 29\n  };                                                                                              // 30\n});                                                                                               // 31\n                                                                                                  // 32\n// checks whether a string parses as JSON                                                         // 33\nvar isJSON = function (str) {                                                                     // 34\n  try {                                                                                           // 35\n    JSON.parse(str);                                                                              // 36\n    return true;                                                                                  // 37\n  } catch (e) {                                                                                   // 38\n    return false;                                                                                 // 39\n  }                                                                                               // 40\n};                                                                                                // 41\n                                                                                                  // 42\n// returns an object containing:                                                                  // 43\n// - accessToken                                                                                  // 44\n// - expiresIn: lifetime of token in seconds                                                      // 45\nvar getTokenResponse = function (query) {                                                         // 46\n  var config = ServiceConfiguration.configurations.findOne({service: 'facebook'});                // 47\n  if (!config)                                                                                    // 48\n    throw new ServiceConfiguration.ConfigError();                                                 // 49\n                                                                                                  // 50\n  var responseContent;                                                                            // 51\n  try {                                                                                           // 52\n    // Request an access token                                                                    // 53\n    responseContent = HTTP.get(                                                                   // 54\n      \"https://graph.facebook.com/v2.2/oauth/access_token\", {                                     // 55\n        params: {                                                                                 // 56\n          client_id: config.appId,                                                                // 57\n          redirect_uri: OAuth._redirectUri('facebook', config),                                   // 58\n          client_secret: OAuth.openSecret(config.secret),                                         // 59\n          code: query.code                                                                        // 60\n        }                                                                                         // 61\n      }).content;                                                                                 // 62\n  } catch (err) {                                                                                 // 63\n    throw _.extend(new Error(\"Failed to complete OAuth handshake with Facebook. \" + err.message),\n                   {response: err.response});                                                     // 65\n  }                                                                                               // 66\n                                                                                                  // 67\n  // If 'responseContent' parses as JSON, it is an error.                                         // 68\n  // XXX which facebook error causes this behvaior?                                               // 69\n  if (isJSON(responseContent)) {                                                                  // 70\n    throw new Error(\"Failed to complete OAuth handshake with Facebook. \" + responseContent);      // 71\n  }                                                                                               // 72\n                                                                                                  // 73\n  // Success!  Extract the facebook access token and expiration                                   // 74\n  // time from the response                                                                       // 75\n  var parsedResponse = querystring.parse(responseContent);                                        // 76\n  var fbAccessToken = parsedResponse.access_token;                                                // 77\n  var fbExpires = parsedResponse.expires;                                                         // 78\n                                                                                                  // 79\n  if (!fbAccessToken) {                                                                           // 80\n    throw new Error(\"Failed to complete OAuth handshake with facebook \" +                         // 81\n                    \"-- can't find access token in HTTP response. \" + responseContent);           // 82\n  }                                                                                               // 83\n  return {                                                                                        // 84\n    accessToken: fbAccessToken,                                                                   // 85\n    expiresIn: fbExpires                                                                          // 86\n  };                                                                                              // 87\n};                                                                                                // 88\n                                                                                                  // 89\nvar getIdentity = function (accessToken, fields) {                                                // 90\n  try {                                                                                           // 91\n    return HTTP.get(\"https://graph.facebook.com/v2.4/me\", {                                       // 92\n      params: {                                                                                   // 93\n        access_token: accessToken,                                                                // 94\n        fields: fields                                                                            // 95\n      }                                                                                           // 96\n    }).data;                                                                                      // 97\n  } catch (err) {                                                                                 // 98\n    throw _.extend(new Error(\"Failed to fetch identity from Facebook. \" + err.message),           // 99\n                   {response: err.response});                                                     // 100\n  }                                                                                               // 101\n};                                                                                                // 102\n                                                                                                  // 103\nFacebook.retrieveCredential = function(credentialToken, credentialSecret) {                       // 104\n  return OAuth.retrieveCredential(credentialToken, credentialSecret);                             // 105\n};                                                                                                // 106\n                                                                                                  // 107\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage.facebook = {\n  Facebook: Facebook\n};\n\n})();\n","servePath":"/packages/facebook.js","sourceMap":{"version":3,"sources":["/packages/facebook/facebook_server.js"],"names":[],"mappingswG","file":"/packages/facebook.js","sourcesContent":["Facebook = {};\n\nvar querystring = Npm.require('querystring');\n\n\nOAuth.registerService('facebook', 2, null, function(query) {\n\n  var response = getTokenResponse(query);\n  var accessToken = response.accessToken;\n\n  // include all fields from facebook\n  // http://developers.facebook.com/docs/reference/login/public-profile-and-friend-list/\n  var whitelisted = ['id', 'email', 'name', 'first_name',\n      'last_name', 'link', 'gender', 'locale', 'age_range'];\n\n  var identity = getIdentity(accessToken, whitelisted);\n\n  var serviceData = {\n    accessToken: accessToken,\n    expiresAt: (+new Date) + (1000 * response.expiresIn)\n  };\n\n\n  var fields = _.pick(identity, whitelisted);\n  _.extend(serviceData, fields);\n\n  return {\n    serviceData: serviceData,\n    options: {profile: {name: identity.name}}\n  };\n});\n\n// checks whether a string parses as JSON\nvar isJSON = function (str) {\n  try {\n    JSON.parse(str);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\n// returns an object containing:\n// - accessToken\n// - expiresIn: lifetime of token in seconds\nvar getTokenResponse = function (query) {\n  var config = ServiceConfiguration.configurations.findOne({service: 'facebook'});\n  if (!config)\n    throw new ServiceConfiguration.ConfigError();\n\n  var responseContent;\n  try {\n    // Request an access token\n    responseContent = HTTP.get(\n      \"https://graph.facebook.com/v2.2/oauth/access_token\", {\n        params: {\n          client_id: config.appId,\n          redirect_uri: OAuth._redirectUri('facebook', config),\n          client_secret: OAuth.openSecret(config.secret),\n          code: query.code\n        }\n      }).content;\n  } catch (err) {\n    throw _.extend(new Error(\"Failed to complete OAuth handshake with Facebook. \" + err.message),\n                   {response: err.response});\n  }\n\n  // If 'responseContent' parses as JSON, it is an error.\n  // XXX which facebook error causes this behvaior?\n  if (isJSON(responseContent)) {\n    throw new Error(\"Failed to complete OAuth handshake with Facebook. \" + responseContent);\n  }\n\n  // Success!  Extract the facebook access token and expiration\n  // time from the response\n  var parsedResponse = querystring.parse(responseContent);\n  var fbAccessToken = parsedResponse.access_token;\n  var fbExpires = parsedResponse.expires;\n\n  if (!fbAccessToken) {\n    throw new Error(\"Failed to complete OAuth handshake with facebook \" +\n                    \"-- can't find access token in HTTP response. \" + responseContent);\n  }\n  return {\n    accessToken: fbAccessToken,\n    expiresIn: fbExpires\n  };\n};\n\nvar getIdentity = function (accessToken, fields) {\n  try {\n    return HTTP.get(\"https://graph.facebook.com/v2.4/me\", {\n      params: {\n        access_token: accessToken,\n        fields: fields\n      }\n    }).data;\n  } catch (err) {\n    throw _.extend(new Error(\"Failed to fetch identity from Facebook. \" + err.message),\n                   {response: err.response});\n  }\n};\n\nFacebook.retrieveCredential = function(credentialToken, credentialSecret) {\n  return OAuth.retrieveCredential(credentialToken, credentialSecret);\n};\n"]}}]