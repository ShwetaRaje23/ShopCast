{"version":3,"sources":["meteor://ðŸ’»app/lib/router.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/lib/router.js","sourcesContent":["Router.configure({\n  // we use the  appBody template to define the layout for the entire app\n  layoutTemplate: 'appBody',\n\n  // the appNotFound template is used for unknown routes and missing lists\n  notFoundTemplate: 'appNotFound',\n\n  // show the appLoading template whilst the subscriptions below load their data\n  loadingTemplate: 'appLoading',\n\n  // wait on the following subscriptions before rendering the page to ensure\n  // the data it's expecting is present\n  waitOn: function() {\n    return [\n      Meteor.subscribe('publicLists'),\n      Meteor.subscribe('privateLists')\n    ];\n  }\n});\n\ndataReadyHold = null;\n\nif (Meteor.isClient) {\n  // Keep showing the launch screen on mobile devices until we have loaded\n  // the app's data\n  dataReadyHold = LaunchScreen.hold();\n\n  // Show the loading screen on desktop\n  Router.onBeforeAction('loading', {except: ['join', 'signin']});\n  Router.onBeforeAction('dataNotFound', {except: ['join', 'signin']});\n}\n\nRouter.route('join');\nRouter.route('signin');\n\nRouter.route('listsShow', {\n  path: '/lists/:_id',\n  // subscribe to todos before the page is rendered but don't wait on the\n  // subscription, we'll just render the items as they arrive\n  onBeforeAction: function () {\n    this.todosHandle = Meteor.subscribe('todos', this.params._id);\n\n    if (this.ready()) {\n      // Handle for launch screen defined in app-body.js\n      dataReadyHold.release();\n    }\n  },\n  data: function () {\n    return Lists.findOne(this.params._id);\n  },\n  action: function () {\n    this.render();\n  }\n});\n\nRouter.route('home', {\n  path: '/',\n  action: function() {\n    Router.go('listsShow', Lists.findOne());\n  }\n});\n"]}