{"version":3,"sources":["meteor://ðŸ’»app/client/templates/auth-signin.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/client/templates/auth-signin.js","sourcesContent":["var ERRORS_KEY = 'signinErrors';\n\nTemplate.signin.onCreated(function() {\n  Session.set(ERRORS_KEY, {});\n});\n\nTemplate.signin.helpers({\n  errorMessages: function() {\n    return _.values(Session.get(ERRORS_KEY));\n  },\n  errorClass: function(key) {\n    return Session.get(ERRORS_KEY)[key] && 'error';\n  }\n});\n\nTemplate.signin.events({\n  'submit': function(event, template) {\n    event.preventDefault();\n    \n    var email = template.$('[name=email]').val();\n    var password = template.$('[name=password]').val();\n    \n    var errors = {};\n\n    if (! email) {\n      errors.email = 'Email is required';\n    }\n\n    if (! password) {\n      errors.password = 'Password is required';\n    }\n    \n    Session.set(ERRORS_KEY, errors);\n    if (_.keys(errors).length) {\n      return;\n    }\n    \n    Meteor.loginWithPassword(email, password, function(error) {\n      if (error) {\n        return Session.set(ERRORS_KEY, {'none': error.reason});\n      }\n      \n      Router.go('home');\n    });\n  }\n});\n"]}