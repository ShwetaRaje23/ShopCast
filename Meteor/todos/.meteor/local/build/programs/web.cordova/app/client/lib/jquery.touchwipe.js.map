{"version":3,"sources":["meteor://ðŸ’»app/client/lib/jquery.touchwipe.js"],"names":[],"mappings":"eAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/client/lib/jquery.touchwipe.js","sourcesContent":["/**\n * jQuery Plugin to obtain touch gestures from iPhone, iPod Touch and iPad, should also work with Android mobile phones (not tested yet!)\n * Common usage: wipe images (left and right to show the previous or next image)\n * \n * @author Andreas Waltl, netCU Internetagentur (http://www.netcu.de)\n * @version 1.1.1 (9th December 2010) - fix bug (older IE's had problems)\n * @version 1.1 (1st September 2010) - support wipe up and wipe down\n * @version 1.0 (15th July 2010)\n */\n(function($) { \n   $.fn.touchwipe = function(settings) {\n     var config = {\n    \t\tmin_move_x: 20,\n    \t\tmin_move_y: 20,\n \t\t\twipeLeft: function() { },\n \t\t\twipeRight: function() { },\n \t\t\twipeUp: function() { },\n \t\t\twipeDown: function() { },\n\t\t\tpreventDefaultEvents: true\n\t };\n     \n     if (settings) $.extend(config, settings);\n \n     this.each(function() {\n    \t var startX;\n    \t var startY;\n\t\t var isMoving = false;\n\n    \t function cancelTouch() {\n    \t\t this.removeEventListener('touchmove', onTouchMove);\n    \t\t startX = null;\n    \t\t isMoving = false;\n    \t }\t\n    \t \n    \t function onTouchMove(e) {\n    \t\t if(config.preventDefaultEvents) {\n    \t\t\t e.preventDefault();\n    \t\t }\n    \t\t if(isMoving) {\n\t    \t\t var x = e.touches[0].pageX;\n\t    \t\t var y = e.touches[0].pageY;\n\t    \t\t var dx = startX - x;\n\t    \t\t var dy = startY - y;\n\t    \t\t if(Math.abs(dx) >= config.min_move_x) {\n\t    \t\t\tcancelTouch();\n\t    \t\t\tif(dx > 0) {\n\t    \t\t\t\tconfig.wipeLeft();\n\t    \t\t\t}\n\t    \t\t\telse {\n\t    \t\t\t\tconfig.wipeRight();\n\t    \t\t\t}\n\t    \t\t }\n\t    \t\t else if(Math.abs(dy) >= config.min_move_y) {\n\t\t    \t\t\tcancelTouch();\n\t\t    \t\t\tif(dy > 0) {\n\t\t    \t\t\t\tconfig.wipeDown();\n\t\t    \t\t\t}\n\t\t    \t\t\telse {\n\t\t    \t\t\t\tconfig.wipeUp();\n\t\t    \t\t\t}\n\t\t    \t\t }\n    \t\t }\n    \t }\n    \t \n    \t function onTouchStart(e)\n    \t {\n    \t\t if (e.touches.length == 1) {\n    \t\t\t startX = e.touches[0].pageX;\n    \t\t\t startY = e.touches[0].pageY;\n    \t\t\t isMoving = true;\n    \t\t\t this.addEventListener('touchmove', onTouchMove, false);\n    \t\t }\n    \t }    \t \n    \t if ('ontouchstart' in document.documentElement) {\n    \t\t this.addEventListener('touchstart', onTouchStart, false);\n    \t }\n     });\n \n     return this;\n   };\n \n })(jQuery);\n"]}